import{_ as o,l as p,H as e,m,I as s}from"../server.js";import{p as n}from"./mermaid-parser.core-Dcw1NPlv.js";import"graceful-fs";import"path";import"fs";import"assert";import"crypto";import"os";import"http";import"https";import"url";import"util";import"domain";import"stream";import"timers";import"events";import"buffer";import"zlib";import"net";import"dns";import"tls";import"child_process";import"punycode";import"./reduce-Tmod7l3H.js";import"./min-DqVDo_SI.js";import"./clone-BAMAgPku.js";var g={parse:o(async r=>{const t=await n("info",r);p.debug(t)},"parse")},v={version:s},d=o(()=>v.version,"getVersion"),c={getVersion:d},l=o((r,t,a)=>{p.debug(`rendering info diagram
`+r);const i=e(t);m(i,100,400,!0),i.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${a}`)},"draw"),f={draw:l},G={parser:g,db:c,renderer:f};export{G as diagram};
